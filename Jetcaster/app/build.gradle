/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.example.jetcaster.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId 'com.example.jetcaster'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }

    packagingOptions {
        // The Rome library JARs embed some internal utils libraries in nested JARs.
        // We don't need them so we exclude them in the final package.
        exclude "/*.jar"
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.1.0-rc02' // For Kotlin 1.6.10. Revert with rc03.
    }
}

dependencies {
    implementation Libs.Kotlin.stdlib
    implementation Libs.Coroutines.android

    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.palette

    implementation Libs.AndroidX.Activity.activityCompose

    implementation Libs.AndroidX.Constraint.constraintLayoutCompose

    implementation Libs.AndroidX.Compose.foundation
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.materialIconsExtended
    implementation Libs.AndroidX.Compose.tooling

    implementation Libs.AndroidX.Lifecycle.runtime
    implementation Libs.AndroidX.Lifecycle.viewmodel
    implementation Libs.AndroidX.Lifecycle.viewModelCompose
    implementation Libs.AndroidX.Navigation.navigation

    implementation Libs.AndroidX.Window.window

    implementation Libs.Accompanist.pager
    implementation Libs.Accompanist.insets

    implementation Libs.Coil.coilCompose

    implementation Libs.OkHttp.okhttp
    implementation Libs.OkHttp.logging

    implementation Libs.Rome.rome
    implementation Libs.Rome.modules

    implementation Libs.AndroidX.Room.runtime
    implementation Libs.AndroidX.Room.ktx

    kapt Libs.AndroidX.Room.compiler

    coreLibraryDesugaring Libs.jdkDesugar
}
